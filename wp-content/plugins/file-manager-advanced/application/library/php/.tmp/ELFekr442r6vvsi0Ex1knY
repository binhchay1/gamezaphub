<?php

/**
 * Custom template tags for Bloggers Theme
 * Fix accessibility issues by adding aria-labels to ALL links
 *
 * @package Bloggers
 */

// ============================================================================
// FIX ARIA-LABELS IN HTML OUTPUT (PHP - Before PageSpeed tests)
// ============================================================================

/**
 * Capture and fix HTML output - Add aria-labels to all links
 */
add_action('template_redirect', 'bloggers_fix_links_buffer_start');
function bloggers_fix_links_buffer_start()
{
    if (!is_admin()) {
        ob_start('bloggers_fix_missing_aria_labels');
    }
}

/**
 * Process HTML and add missing aria-labels
 */
function bloggers_fix_missing_aria_labels($html)
{
    if (empty($html) || is_admin()) {
        return $html;
    }

    // Fix 1: Author links (.auth)
    $html = preg_replace_callback(
        '/<as+([^>]*?class=["'][^"']*bauthb[^"']*["'][^>]*?)>/i',
        function($m) {
            if (stripos($m[0], 'aria-label') !== false) return $m[0];
            // Extract author name from link text
            return '<a ' . $m[1] . ' aria-label="View author profile">';
        },
        $html
    );

    // Fix 2: Author pic links (.bs-author-pic)
    $html = preg_replace_callback(
        '/<as+([^>]*?class=["'][^"']*bbs-author-picb[^"']*["'][^>]*?)>/i',
        function($m) {
            if (stripos($m[0], 'aria-label') !== false) return $m[0];
            return '<a ' . $m[1] . ' aria-label="View author profile and posts">';
        },
        $html
    );

    // Fix 3: Link div overlays (.link-div)
    $html = preg_replace_callback(
        '/<as+([^>]*?class=["'][^"']*blink-divb[^"']*["'][^>]*?)>/i',
        function($m) {
            if (stripos($m[0], 'aria-label') !== false) return $m[0];
            return '<a ' . $m[1] . ' aria-label="Read full article">';
        },
        $html
    );

    // Fix 4: Blog thumb links (.bs-blog-thumb)  
    $html = preg_replace_callback(
        '/<as+([^>]*?class=["'][^"']*bbs-blog-thumbb[^"']*["'][^>]*?)>/i',
        function($m) {
            if (stripos($m[0], 'aria-label') !== false) return $m[0];
            return '<a ' . $m[1] . ' aria-label="View featured image">';
        },
        $html
    );

    // Fix 5: Category links (.blogarise-categories)
    $html = preg_replace_callback(
        '/<as+([^>]*?class=["'][^"']*bblogarise-categoriesb[^"']*["'][^>]*?)>([^<]+)</a>/i',
        function($m) {
            if (stripos($m[0], 'aria-label') !== false) return $m[0];
            $cat_name = strip_tags($m[2]);
            return '<a ' . $m[1] . ' aria-label="View all posts in ' . esc_attr($cat_name) . '">' . $m[2] . '</a>';
        },
        $html
    );

    return $html;
}

/**
 * Add proper alt text and loading attributes to post thumbnails
 */
add_filter('post_thumbnail_html', 'bloggers_optimize_post_thumbnail', 10, 5);
function bloggers_optimize_post_thumbnail($html, $post_id, $post_thumbnail_id, $size, $attr)
{
    if (empty($html)) {
        return $html;
    }

    $post_title = get_the_title($post_id);

    if (strpos($html, 'loading=') === false) {
        $html = str_replace('<img ', '<img loading="lazy" ', $html);
    }

    if (strpos($html, 'decoding=') === false) {
        $html = str_replace('<img ', '<img decoding="async" ', $html);
    }

    if (strpos($html, 'alt=""') !== false || strpos($html, 'alt=" "') !== false) {
        $html = str_replace(
            array('alt=""', 'alt=" "'),
            'alt="' . esc_attr($post_title) . '"',
            $html
        );
    }

    return $html;
}

/**
 * Add aria-labels to links in post content
 */
add_filter('the_content', 'bloggers_add_aria_to_content_links', 20);
function bloggers_add_aria_to_content_links($content)
{
    if (empty($content) || !class_exists('DOMDocument')) {
        return $content;
    }

    libxml_use_internal_errors(true);

    $dom = new DOMDocument();
    $dom->loadHTML(mb_convert_encoding($content, 'HTML-ENTITIES', 'UTF-8'), LIBXML_HTML_NOIMPLIED | LIBXML_HTML_NODEFDTD);

    $links = $dom->getElementsByTagName('a');

    foreach ($links as $link) {
        if ($link->hasAttribute('aria-label')) {
            continue;
        }

        $classes = $link->getAttribute('class');
        $text = trim($link->textContent);
        $href = $link->getAttribute('href');

        $aria_label = '';

        if (strpos($classes, 'link-div') !== false) {
            $aria_label = 'Read full article';
        } elseif (strpos($classes, 'blogarise-categories') !== false && $text) {
            $aria_label = sprintf(__('View all posts in %s', 'bloggers'), $text);
        } elseif ($text) {
            if (strlen($text) > 3 && !in_array(strtolower($text), array('here', 'click', 'link', 'more'))) {
                $aria_label = $text;
            }
        }

        if ($aria_label) {
            $link->setAttribute('aria-label', $aria_label);
        }
    }

    $content = $dom->saveHTML();

    libxml_clear_errors();

    return $content;
}

/**
 * Fix image links to have proper aria-labels
 */
add_filter('wp_get_attachment_link', 'bloggers_add_aria_to_image_links', 10, 6);
function bloggers_add_aria_to_image_links($link_html, $id, $size, $permalink, $icon, $text)
{
    if (empty($link_html)) {
        return $link_html;
    }

    $attachment = get_post($id);
    $alt_text = get_post_meta($id, '_wp_attachment_image_alt', true);
    $title = $attachment ? $attachment->post_title : '';

    $aria_label = $alt_text ? $alt_text : $title;

    if ($aria_label && strpos($link_html, 'aria-label') === false) {
        $link_html = str_replace(
            '<a ',
            '<a aria-label="' . esc_attr($aria_label) . '" ',
            $link_html
        );
    }

    return $link_html;
}

// ============================================================================
// WRAPPER FUNCTIONS FOR ACCESSIBLE OUTPUT
// ============================================================================

/**
 * New wrapper function for accessible author content
 * Can be used in child theme templates
 */
if (!function_exists('bloggers_author_content_accessible')) :
    function bloggers_author_content_accessible()
    {
        $author_name = get_the_author();
        $author_url = get_author_posts_url(get_the_author_meta('ID'));
?>
        <span class="bs-author">
            <a class="auth"
                href="<?php echo esc_url($author_url); ?>"
                aria-label="<?php echo esc_attr(sprintf(__('View %s profile', 'bloggers'), $author_name)); ?>">
                <?php echo get_avatar(get_the_author_meta('ID'), 150, '', $author_name, array('loading' => 'lazy')); ?>
                <?php echo esc_html($author_name); ?>
            </a>
        </span>
        <?php
    }
endif;

/**
 * New wrapper for accessible post image
 * Can be used in child theme templates
 */
if (!function_exists('bloggers_post_image_accessible')) :
    function bloggers_post_image_accessible($post)
    {
        $url = blogarise_get_freatured_image_url($post->ID, 'blogarise-medium');
        $post_title = get_the_title($post);

        if ($url) {
            if (blogarise_get_option('post_image_type') == 'post_fix_height') {
        ?>
                <div class="bs-blog-thumb lg back-img" style="background-image: url('<?php echo esc_url($url); ?>');">
                    <a href="<?php the_permalink(); ?>"
                        class="link-div"
                        aria-label="<?php echo esc_attr(sprintf(__('Read more: %s', 'bloggers'), $post_title)); ?>"></a>
                </div>
            <?php
            } else {
            ?>
                <div class="bs-post-thumb lg">
                    <a href="<?php echo esc_url(get_the_permalink()); ?>"
                        class="bs-blog-thumb"
                        aria-label="<?php echo esc_attr(sprintf(__('Featured image for: %s', 'bloggers'), $post_title)); ?>">
                        <?php
                        the_post_thumbnail('', array(
                            'class' => 'img-responsive img-fluid',
                            'loading' => 'lazy',
                            'decoding' => 'async',
                            'alt' => $post_title
                        ));
                        ?>
                    </a>
                </div>
        <?php
            }
        }
    }
endif;

/**
 * Accessible date output
 */
if (!function_exists('bloggers_date_content_accessible')) :
    function bloggers_date_content_accessible()
    {
        $month = get_post_time('F Y');
        ?>
        <span class="bs-blog-date">
            <a href="<?php echo esc_url(get_month_link(get_post_time('Y'), get_post_time('m'))); ?>"
                aria-label="<?php echo esc_attr(sprintf(__('View all posts from %s', 'bloggers'), $month)); ?>">
                <time datetime="<?php echo esc_attr(get_the_date('c')); ?>">
                    <?php echo esc_html(get_the_date()); ?>
                </time>
            </a>
        </span>
<?php
    }
endif;

/**
 * Add aria-label to category links output
 */
add_filter('get_the_category_list', 'bloggers_add_aria_to_categories', 10, 3);
function bloggers_add_aria_to_categories($thelist, $separator, $parents)
{
    if (empty($thelist)) {
        return $thelist;
    }

    $thelist = preg_replace_callback(
        '/<a([^>]*?)href="([^"]*)"([^>]*?)>([^<]*)</a>/i',
        function ($matches) {
            if (strpos($matches[0], 'aria-label') === false) {
                $category_name = strip_tags($matches[4]);
                return '<a' . $matches[1] . 'href="' . $matches[2] . '" aria-label="' . esc_attr(sprintf(__('View all posts in %s', 'bloggers'), $category_name)) . '"' . $matches[3] . '>' . $matches[4] . '</a>';
            }
            return $matches[0];
        },
        $thelist
    );

    return $thelist;
}

/**
 * Add aria-label to tag links output
 */
add_filter('the_tags', 'bloggers_add_aria_to_tags', 10, 5);
function bloggers_add_aria_to_tags($tag_list, $before, $sep, $after, $post_id)
{
    if (empty($tag_list)) {
        return $tag_list;
    }

    $tag_list = preg_replace_callback(
        '/<a([^>]*?)>([^<]*)</a>/i',
        function ($matches) {
            if (strpos($matches[0], 'aria-label') === false) {
                $tag_name = strip_tags($matches[2]);
                return '<a' . $matches[1] . ' aria-label="' . esc_attr(sprintf(__('View posts tagged with %s', 'bloggers'), $tag_name)) . '">' . $matches[2] . '</a>';
            }
            return $matches[0];
        },
        $tag_list
    );

    return $tag_list;
}